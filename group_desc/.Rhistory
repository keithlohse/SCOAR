e_8<-rnorm(20000,0,sqrt((1-0.8^2))) # A random error term with an SD = sqrt(1-r squared)
XC_5<-0.5*Xc+e_5
XE_5<-0.5*Xe+e_5
XC_6<-0.6*Xc+e_6
XE_6<-0.6*Xe+e_6
XC_7<-0.7*Xc+e_7
XE_7<-0.7*Xe+e_7
XC_8<-0.8*Xc+e_8
XE_8<-0.8*Xe+e_8
XC_9<-0.9*Xc+e_9
XE_9<-0.9*Xe+e_9
# We will also create a group variable for inclusion in the Population dataframe
POP<-data.frame(Xc, Xe, XC_5, XE_5, XC_6, XE_6, XC_7, XE_7, XC_8, XE_8, XC_9, XE_9)
head(POP)
## Simulated Samples
# Now we need to get ready to sample our population a bunch of times.
index<-c(1:10000) # set the number of samples that you want to take
DATA<-data.frame(index) #Create a dataframe to store the statisticcal tests
# from our sample data
# Statistics to extract from the t-test function in the for-loop
m<-t.test(Xc, Xe, paired=FALSE, var.equal=TRUE)
m$statistic
m$p.value
m<-t.test(Xc, Xe, paired=TRUE, var.equal=TRUE)
m
m$statistic
set.seed(123) # Set the seed number for consistent, replicable simulations.
# Setting the size of our treatment effect
d<-0.8 # This is a Cohen's d (standardized effect size) that we will add
# into our data to create the difference between groups
Xc<-rnorm(10000,0,1)
Xe<-(rnorm(10000,0+d,1))
## Reliability
# Below we are going to create two different X observations with different levels of
# reliability (i.e., correlations with the true X).
e_5<-rnorm(20000,0,sqrt((1-0.5^2))) # A random error term with an SD = sqrt(1-r squared)
e_6<-rnorm(20000,0,sqrt((1-0.6^2))) # A random error term with an SD = sqrt(1-r squared)
e_7<-rnorm(20000,0,sqrt((1-0.7^2))) # A random error term with an SD = sqrt(1-r squared)
e_8<-rnorm(20000,0,sqrt((1-0.8^2))) # A random error term with an SD = sqrt(1-r squared)
e_9<-rnorm(20000,0,sqrt((1-0.9^2))) # A random error term with an SD = sqrt(1-r squared)
# From these random error terms, we can create correlated X1 and X2 variables.
XC_5<-0.5*Xc+e_5
XE_5<-0.5*Xe+e_5
XC_6<-0.6*Xc+e_6
XE_6<-0.6*Xe+e_6
XC_7<-0.7*Xc+e_7
XE_7<-0.7*Xe+e_7
XC_8<-0.8*Xc+e_8
XE_8<-0.8*Xe+e_8
XC_9<-0.9*Xc+e_9
XE_9<-0.9*Xe+e_9
# We will also create a group variable for inclusion in the Population dataframe
POP<-data.frame(Xc, Xe, XC_5, XE_5, XC_6, XE_6, XC_7, XE_7, XC_8, XE_8, XC_9, XE_9)
head(POP)
## Simulated Samples
# Now we need to get ready to sample our population a bunch of times.
index<-c(1:10000) # set the number of samples that you want to take
DATA<-data.frame(index) #Create a dataframe to store the statisticcal tests
# from our sample data
for (i in 1:length(DATA$index)) {
# For the first test, sample size is 10.
n <- 10
# n = 10, r = 1.0 (True Effects)
ScT <- sample(POP$Xc, n)
SeT <- sample(POP$Xe, n)
indT <- t.test(ScT,SeT,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.5
Sc5 <- sample(POP$XC_5, n)
Se5 <- sample(POP$XE_5, n)
ind5 <- t.test(Sc5,Se5,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.6
Sc6 <- sample(POP$XC_6, n)
Se6 <- sample(POP$XE_6, n)
ind6 <- t.test(Sc6,Se6,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.7
Sc7 <- sample(POP$XC_7, n)
Se7 <- sample(POP$XE_7, n)
ind7 <- t.test(Sc7,Se7,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.8
Sc8 <- sample(POP$XC_8, n)
Se8 <- sample(POP$XE_8, n)
ind8 <- t.test(Sc8,Se8,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.9
Sc9 <- sample(POP$XC_9, n)
Se9 <- sample(POP$XE_9, n)
ind9 <- t.test(Sc9,Se9,paired=FALSE,var.equal=TRUE)
# Inferential Statistics
DATA$size[i]<-n
DATA$t_ind[i]<-indT$statistic # Saves the t-value
DATA$p_ind[i]<-indT$p.value # Saves the p-value
DATA$t5_ind[i]<-ind5$statistic # Saves the t-value
DATA$p5_ind[i]<-ind5$p.value # Saves the p-value
DATA$t6_ind[i]<-ind6$statistic
DATA$p6_ind[i]<-ind6$p.value
DATA$t7_ind[i]<-ind7$statistic
DATA$p7_ind[i]<-ind7$p.value
DATA$t8_ind[i]<-ind8$statistic
DATA$p8_ind[i]<-ind8$p.value
DATA$t9_ind[i]<-ind9$statistic
DATA$p9_ind[i]<-ind9$p.value
}
write.csv(DATA, file="d08_n10.csv")
index<-c(1:10000) # set the number of samples that you want to take
DATA<-data.frame(index) #Create a dataframe to store the statisticcal tests
for (i in 1:length(DATA$index)) {
# For the first test, sample size is 10.
n <- 20
# n = 10, r = 1.0 (True Effects)
ScT <- sample(POP$Xc, n)
SeT <- sample(POP$Xe, n)
indT <- t.test(ScT,SeT,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.5
Sc5 <- sample(POP$XC_5, n)
Se5 <- sample(POP$XE_5, n)
ind5 <- t.test(Sc5,Se5,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.6
Sc6 <- sample(POP$XC_6, n)
Se6 <- sample(POP$XE_6, n)
ind6 <- t.test(Sc6,Se6,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.7
Sc7 <- sample(POP$XC_7, n)
Se7 <- sample(POP$XE_7, n)
ind7 <- t.test(Sc7,Se7,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.8
Sc8 <- sample(POP$XC_8, n)
Se8 <- sample(POP$XE_8, n)
ind8 <- t.test(Sc8,Se8,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.9
Sc9 <- sample(POP$XC_9, n)
Se9 <- sample(POP$XE_9, n)
ind9 <- t.test(Sc9,Se9,paired=FALSE,var.equal=TRUE)
# Inferential Statistics
DATA$size[i]<-n
DATA$t_ind[i]<-indT$statistic # Saves the t-value
DATA$p_ind[i]<-indT$p.value # Saves the p-value
DATA$t5_ind[i]<-ind5$statistic # Saves the t-value
DATA$p5_ind[i]<-ind5$p.value # Saves the p-value
DATA$t6_ind[i]<-ind6$statistic
DATA$p6_ind[i]<-ind6$p.value
DATA$t7_ind[i]<-ind7$statistic
DATA$p7_ind[i]<-ind7$p.value
DATA$t8_ind[i]<-ind8$statistic
DATA$p8_ind[i]<-ind8$p.value
DATA$t9_ind[i]<-ind9$statistic
DATA$p9_ind[i]<-ind9$p.value
}
write.csv(DATA, file="d08_n20.csv")
index<-c(1:10000) # set the number of samples that you want to take
DATA<-data.frame(index) #Create a dataframe to store the statisticcal tests
for (i in 1:length(DATA$index)) {
# For the first test, sample size is 10.
n <- 30
# n = 10, r = 1.0 (True Effects)
ScT <- sample(POP$Xc, n)
SeT <- sample(POP$Xe, n)
indT <- t.test(ScT,SeT,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.5
Sc5 <- sample(POP$XC_5, n)
Se5 <- sample(POP$XE_5, n)
ind5 <- t.test(Sc5,Se5,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.6
Sc6 <- sample(POP$XC_6, n)
Se6 <- sample(POP$XE_6, n)
ind6 <- t.test(Sc6,Se6,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.7
Sc7 <- sample(POP$XC_7, n)
Se7 <- sample(POP$XE_7, n)
ind7 <- t.test(Sc7,Se7,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.8
Sc8 <- sample(POP$XC_8, n)
Se8 <- sample(POP$XE_8, n)
ind8 <- t.test(Sc8,Se8,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.9
Sc9 <- sample(POP$XC_9, n)
Se9 <- sample(POP$XE_9, n)
ind9 <- t.test(Sc9,Se9,paired=FALSE,var.equal=TRUE)
# Inferential Statistics
DATA$size[i]<-n
DATA$t_ind[i]<-indT$statistic # Saves the t-value
DATA$p_ind[i]<-indT$p.value # Saves the p-value
DATA$t5_ind[i]<-ind5$statistic # Saves the t-value
DATA$p5_ind[i]<-ind5$p.value # Saves the p-value
DATA$t6_ind[i]<-ind6$statistic
DATA$p6_ind[i]<-ind6$p.value
DATA$t7_ind[i]<-ind7$statistic
DATA$p7_ind[i]<-ind7$p.value
DATA$t8_ind[i]<-ind8$statistic
DATA$p8_ind[i]<-ind8$p.value
DATA$t9_ind[i]<-ind9$statistic
DATA$p9_ind[i]<-ind9$p.value
}
write.csv(DATA, file="d08_n30.csv")
index<-c(1:10000) # set the number of samples that you want to take
DATA<-data.frame(index) #Create a dataframe to store the statisticcal tests
for (i in 1:length(DATA$index)) {
# For the first test, sample size is 10.
n <- 40
# n = 10, r = 1.0 (True Effects)
ScT <- sample(POP$Xc, n)
SeT <- sample(POP$Xe, n)
indT <- t.test(ScT,SeT,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.5
Sc5 <- sample(POP$XC_5, n)
Se5 <- sample(POP$XE_5, n)
ind5 <- t.test(Sc5,Se5,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.6
Sc6 <- sample(POP$XC_6, n)
Se6 <- sample(POP$XE_6, n)
ind6 <- t.test(Sc6,Se6,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.7
Sc7 <- sample(POP$XC_7, n)
Se7 <- sample(POP$XE_7, n)
ind7 <- t.test(Sc7,Se7,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.8
Sc8 <- sample(POP$XC_8, n)
Se8 <- sample(POP$XE_8, n)
ind8 <- t.test(Sc8,Se8,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.9
Sc9 <- sample(POP$XC_9, n)
Se9 <- sample(POP$XE_9, n)
ind9 <- t.test(Sc9,Se9,paired=FALSE,var.equal=TRUE)
# Inferential Statistics
DATA$size[i]<-n
DATA$t_ind[i]<-indT$statistic # Saves the t-value
DATA$p_ind[i]<-indT$p.value # Saves the p-value
DATA$t5_ind[i]<-ind5$statistic # Saves the t-value
DATA$p5_ind[i]<-ind5$p.value # Saves the p-value
DATA$t6_ind[i]<-ind6$statistic
DATA$p6_ind[i]<-ind6$p.value
DATA$t7_ind[i]<-ind7$statistic
DATA$p7_ind[i]<-ind7$p.value
DATA$t8_ind[i]<-ind8$statistic
DATA$p8_ind[i]<-ind8$p.value
DATA$t9_ind[i]<-ind9$statistic
DATA$p9_ind[i]<-ind9$p.value
}
write.csv(DATA, file="d08_n40.csv")
index<-c(1:10000) # set the number of samples that you want to take
DATA<-data.frame(index) #Create a dataframe to store the statisticcal tests
for (i in 1:length(DATA$index)) {
# For the first test, sample size is 10.
n <- 50
# n = 10, r = 1.0 (True Effects)
ScT <- sample(POP$Xc, n)
SeT <- sample(POP$Xe, n)
indT <- t.test(ScT,SeT,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.5
Sc5 <- sample(POP$XC_5, n)
Se5 <- sample(POP$XE_5, n)
ind5 <- t.test(Sc5,Se5,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.6
Sc6 <- sample(POP$XC_6, n)
Se6 <- sample(POP$XE_6, n)
ind6 <- t.test(Sc6,Se6,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.7
Sc7 <- sample(POP$XC_7, n)
Se7 <- sample(POP$XE_7, n)
ind7 <- t.test(Sc7,Se7,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.8
Sc8 <- sample(POP$XC_8, n)
Se8 <- sample(POP$XE_8, n)
ind8 <- t.test(Sc8,Se8,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.9
Sc9 <- sample(POP$XC_9, n)
Se9 <- sample(POP$XE_9, n)
ind9 <- t.test(Sc9,Se9,paired=FALSE,var.equal=TRUE)
# Inferential Statistics
DATA$size[i]<-n
DATA$t_ind[i]<-indT$statistic # Saves the t-value
DATA$p_ind[i]<-indT$p.value # Saves the p-value
DATA$t5_ind[i]<-ind5$statistic # Saves the t-value
DATA$p5_ind[i]<-ind5$p.value # Saves the p-value
DATA$t6_ind[i]<-ind6$statistic
DATA$p6_ind[i]<-ind6$p.value
DATA$t7_ind[i]<-ind7$statistic
DATA$p7_ind[i]<-ind7$p.value
DATA$t8_ind[i]<-ind8$statistic
DATA$p8_ind[i]<-ind8$p.value
DATA$t9_ind[i]<-ind9$statistic
DATA$p9_ind[i]<-ind9$p.value
}
write.csv(DATA, file="d08_n50.csv")
index<-c(1:10000) # set the number of samples that you want to take
DATA<-data.frame(index) #Create a dataframe to store the statisticcal tests
for (i in 1:length(DATA$index)) {
# For the first test, sample size is 10.
n <- 60
# n = 10, r = 1.0 (True Effects)
ScT <- sample(POP$Xc, n)
SeT <- sample(POP$Xe, n)
indT <- t.test(ScT,SeT,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.5
Sc5 <- sample(POP$XC_5, n)
Se5 <- sample(POP$XE_5, n)
ind5 <- t.test(Sc5,Se5,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.6
Sc6 <- sample(POP$XC_6, n)
Se6 <- sample(POP$XE_6, n)
ind6 <- t.test(Sc6,Se6,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.7
Sc7 <- sample(POP$XC_7, n)
Se7 <- sample(POP$XE_7, n)
ind7 <- t.test(Sc7,Se7,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.8
Sc8 <- sample(POP$XC_8, n)
Se8 <- sample(POP$XE_8, n)
ind8 <- t.test(Sc8,Se8,paired=FALSE,var.equal=TRUE)
# n = 10, r = 0.9
Sc9 <- sample(POP$XC_9, n)
Se9 <- sample(POP$XE_9, n)
ind9 <- t.test(Sc9,Se9,paired=FALSE,var.equal=TRUE)
# Inferential Statistics
DATA$size[i]<-n
DATA$t_ind[i]<-indT$statistic # Saves the t-value
DATA$p_ind[i]<-indT$p.value # Saves the p-value
DATA$t5_ind[i]<-ind5$statistic # Saves the t-value
DATA$p5_ind[i]<-ind5$p.value # Saves the p-value
DATA$t6_ind[i]<-ind6$statistic
DATA$p6_ind[i]<-ind6$p.value
DATA$t7_ind[i]<-ind7$statistic
DATA$p7_ind[i]<-ind7$p.value
DATA$t8_ind[i]<-ind8$statistic
DATA$p8_ind[i]<-ind8$p.value
DATA$t9_ind[i]<-ind9$statistic
DATA$p9_ind[i]<-ind9$p.value
}
write.csv(DATA, file="d08_n60.csv")
library("metafor"); library("dplyr"); library("ggplot2"); library("lme4")
##----------------------- Results 1.0 ------------------------------------------
## Setting the Directory -------------------------------------------------------
getwd()
setwd("C:/Users/krl0022/Documents/GitHub/SCOAR/group_desc/")
list.files()
## Description of Groups Data --------------------------------------------------
GROUPS<-read.csv("./dat_GROUPS.csv", header = TRUE)
head(GROUPS)
## Table 2 ---------------------------------------------------------------------
summary(GROUPS$PT_inc[GROUPS$group=="exp"])
summary(GROUPS$PT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$OT_inc[GROUPS$group=="exp"])
summary(GROUPS$OT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$ST_inc[GROUPS$group=="exp"])
summary(GROUPS$ST_inc[GROUPS$group=="ctrl"])
# Frequency Data
is.numeric(GROUP$h_per_d)
is.numeric(GROUPS$h_per_d)
as.numeric(GROUPS$h_per_d)
str(GROUPS$h_per_d)
GROUPS<-read.csv("./dat_GROUPS.csv", header = TRUE)
head(GROUPS)
## Table 2 ---------------------------------------------------------------------
summary(GROUPS$PT_inc[GROUPS$group=="exp"])
summary(GROUPS$PT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$OT_inc[GROUPS$group=="exp"])
summary(GROUPS$OT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$ST_inc[GROUPS$group=="exp"])
summary(GROUPS$ST_inc[GROUPS$group=="ctrl"])
# Frequency Data
str(GROUPS$h_per_d)
mean(GROUPS$h_per_d[GROUPS$h_IS_NUM==1], na.rm=TRUE)
GROUPS$h_per_d[GROUPS$h_IS_NUM==1]
as.numerics(GROUPS$h_per_d[GROUPS$h_IS_NUM==1])
as.numeric(GROUPS$h_per_d[GROUPS$h_IS_NUM==1])
GROUPS<-read.csv("./dat_GROUPS.csv", header = TRUE)
head(GROUPS)
## Table 2 ---------------------------------------------------------------------
summary(GROUPS$PT_inc[GROUPS$group=="exp"])
summary(GROUPS$PT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$OT_inc[GROUPS$group=="exp"])
summary(GROUPS$OT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$ST_inc[GROUPS$group=="exp"])
summary(GROUPS$ST_inc[GROUPS$group=="ctrl"])
# Frequency Data
GROUPS$h_per_d[GROUPS$h_IS_NUM==1]
summary(GROUPS$h_per_d[GROUPS$h_IS_NUM==1])
as.numeric(levels(GROUPS$h_per_d))[GROUPS$h_per_d]
hpd<-as.numeric(levels(GROUPS$h_per_d))[GROUPS$h_per_d]
summary(hpd)
GROUPS$hpd<-as.numeric(levels(GROUPS$h_per_d))[GROUPS$h_per_d]
GROUPS<-read.csv("./dat_GROUPS.csv", header = TRUE)
head(GROUPS)
## Table 2 ---------------------------------------------------------------------
summary(GROUPS$PT_inc[GROUPS$group=="exp"])
summary(GROUPS$PT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$OT_inc[GROUPS$group=="exp"])
summary(GROUPS$ST_inc[GROUPS$group=="exp"])
summary(GROUPS$ST_inc[GROUPS$group=="ctrl"])
mean(GROUPS$hpd, na.rm=TRUE)
sd(GROUPS$hpd, na.rm=TRUE)
sum(is.na(GROUPS$hpd))
mean(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
sd(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
sum(is.na(GROUPS$hpd[GROUPS$group=="exp"]))
min(GROUPS$hpd[GROUPS$group=="exp"])
min(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
max(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
mean(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
sd(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
min(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
max(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
sum(is.na(GROUPS$hpd[GROUPS$group=="ctrl"]))
sum(is.na(GROUPS$hpd[GROUPS$group=="exp"]))
mean(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
sd(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
min(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
max(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
sum(is.na(GROUPS$dpw[GROUPS$group=="exp"]))
mean(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
sd(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
min(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
max(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
sum(is.na(GROUPS$dpw[GROUPS$group=="ctrl"]))
mean(GROUPS$duration[GROUPS$group=="exp"], na.rm=TRUE)
GROUPS<-read.csv("./dat_GROUPS.csv", header = TRUE)
head(GROUPS)
## Table 2 ---------------------------------------------------------------------
summary(GROUPS$PT_inc[GROUPS$group=="exp"])
summary(GROUPS$PT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$OT_inc[GROUPS$group=="exp"])
summary(GROUPS$OT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$ST_inc[GROUPS$group=="exp"])
summary(GROUPS$ST_inc[GROUPS$group=="ctrl"])
# Frequency Data
# Hours per day
mean(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
sd(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
min(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
max(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
sum(is.na(GROUPS$hpd[GROUPS$group=="exp"]))
mean(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
sd(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
min(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
max(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
sum(is.na(GROUPS$hpd[GROUPS$group=="ctrl"]))
# Days per Week
mean(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
sd(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
min(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
max(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
sum(is.na(GROUPS$dpw[GROUPS$group=="exp"]))
mean(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
sd(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
min(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
max(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
sum(is.na(GROUPS$dpw[GROUPS$group=="ctrl"]))
# Duration of Therapy (in weeks)
# Days per Week
mean(GROUPS$duration[GROUPS$group=="exp"], na.rm=TRUE)
sd(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
min(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
setwd("C:/Users/krl0022/Documents/GitHub/SCOAR/group_desc/")
list.files()
## Description of Groups Data --------------------------------------------------
GROUPS<-read.csv("./dat_GROUPS.csv", header = TRUE)
head(GROUPS)
## Table 2 ---------------------------------------------------------------------
summary(GROUPS$PT_inc[GROUPS$group=="exp"])
summary(GROUPS$PT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$OT_inc[GROUPS$group=="exp"])
summary(GROUPS$OT_inc[GROUPS$group=="ctrl"])
summary(GROUPS$ST_inc[GROUPS$group=="exp"])
summary(GROUPS$ST_inc[GROUPS$group=="ctrl"])
# Frequency Data
# Hours per day
mean(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
sd(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
min(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
max(GROUPS$hpd[GROUPS$group=="exp"], na.rm=TRUE)
sum(is.na(GROUPS$hpd[GROUPS$group=="exp"]))
mean(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
sd(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
min(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
max(GROUPS$hpd[GROUPS$group=="ctrl"], na.rm=TRUE)
sum(is.na(GROUPS$hpd[GROUPS$group=="ctrl"]))
# Days per Week
mean(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
sd(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
min(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
max(GROUPS$dpw[GROUPS$group=="exp"], na.rm=TRUE)
sum(is.na(GROUPS$dpw[GROUPS$group=="exp"]))
mean(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
sd(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
min(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
max(GROUPS$dpw[GROUPS$group=="ctrl"], na.rm=TRUE)
sum(is.na(GROUPS$dpw[GROUPS$group=="ctrl"]))
# Duration of Therapy (in weeks)
# Days per Week
mean(GROUPS$duration[GROUPS$group=="exp"], na.rm=TRUE)
mean(GROUPS$duration[GROUPS$group=="exp"], na.rm=TRUE)
sd(GROUPS$duration[GROUPS$group=="exp"], na.rm=TRUE)
min(GROUPS$duration[GROUPS$group=="exp"], na.rm=TRUE)
max(GROUPS$duration[GROUPS$group=="exp"], na.rm=TRUE)
sum(is.na(GROUPS$duration[GROUPS$group=="exp"]))
mean(GROUPS$duration[GROUPS$group=="ctrl"], na.rm=TRUE)
sd(GROUPS$duration[GROUPS$group=="ctrl"], na.rm=TRUE)
min(GROUPS$duration[GROUPS$group=="ctrl"], na.rm=TRUE)
max(GROUPS$duration[GROUPS$group=="ctrl"], na.rm=TRUE)
sum(is.na(GROUPS$duration[GROUPS$group=="ctrl"]))
mean(GROUPS$total_hours[GROUPS$group=="exp"], na.rm=TRUE)
mean(GROUPS$total_hours[GROUPS$group=="exp"], na.rm=TRUE)
sd(GROUPS$total_hours[GROUPS$group=="exp"], na.rm=TRUE)
min(GROUPS$total_hours[GROUPS$group=="exp"], na.rm=TRUE)
max(GROUPS$total_hours[GROUPS$group=="exp"], na.rm=TRUE)
sum(is.na(GROUPS$total_hours[GROUPS$group=="exp"]))
mean(GROUPS$total_hours[GROUPS$group=="ctrl"], na.rm=TRUE)
sd(GROUPS$total_hours[GROUPS$group=="ctrl"], na.rm=TRUE)
min(GROUPS$total_hours[GROUPS$group=="ctrl"], na.rm=TRUE)
max(GROUPS$total_hours[GROUPS$group=="ctrl"], na.rm=TRUE)
sum(is.na(GROUPS$total_hours[GROUPS$group=="ctrl"]))
summary(GROUPS$how_quantified[GROUPS$group=="exp"])
summary(as.factor(GROUPS$how_quantified[GROUPS$group=="exp"]))
summary(as.factor(GROUPS$how_quantified[GROUPS$group=="ctrl"]))
