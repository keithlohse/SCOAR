xlim=c(40,100), ylim=c(40,90),
pch=21, bg="dodgerblue",
xlab="High School Rank",ylab="SAT Score")
dat$oLever<-NULL
dat$rLever<-NULL
for (i in 1:length(dat$student)) {
ho<-(1/13)+((dat$oHSR[i]-mean(dat$oHSR))^2)/(sum((dat$oHSR-mean(dat$oHSR))^2))
hr<-(1/13)+((dat$rHSR[i]-mean(dat$rHSR))^2)/(sum((dat$rHSR-mean(dat$rHSR))^2))
dat$oLever[i]<-round(ho,5)
dat$rLever[i]<-round(hr,5)
}
dat
mA<-lm(oSAT~1+oHSR, data=dat)
hatvalues(mA)
mB<-lm(rSAT~1+rHSR, data=dat)
hatvalues(mB)
dat$oSDR<-round(rstudent(mA),5)
dat$rSDR<-round(rstudent(mB),5)
dat
dat$oCookD<-dat$SAT-
fitted(mA)
fitted(mA)
summary(mA)
dat$oCookD<-((dat$oSAT-fitted(mA))^2)/(2*(sum(resid(mA)^2)/(13-2)))*
(dat$oLever/(1-dat$oLever)^2)
dat$rCookD<-((dat$rSAT-fitted(mB))^2)/(2*(sum(resid(mB)^2)/(13-2)))*
(dat$rLever/(1-dat$rLever)^2)
summary(mB)
dat
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Currant/Grad_Biostats_ii/r_guidebook/01_t_test/")
library(ez); library(car)
?ks.test()
library(lme4)
library(haven)
install.packages("haven")
install.packages("arm")
install.packages("effects")
install.packages("readxl")
library(haven)
library(arm)
library(effects)
library(lmerTest)
library(readxl)
Forward <- read_excel("C:/Users/dspeter2/Dropbox (ASU)/CURRENT PROJECTS/APA STUDY INFO/APA PAPER/data/DATA TO USE/stats/rcrap/data & code/Forward_4.xlsx",na = "NaN")
Forward <- read_excel("C:/Currant/Statistical Consulting/Daniel Peterson/Forward_4.xlsx",na = "NaN")
Backward <- read_excel("C:/Currant/Statistical Consulting/Daniel Peterson/Backward.xlsx",na = "NaN")
modelComDispB <- lmer(APA ~ COMdisp + (1|subject), Backward)
summary(modelComDispB)
modelMOSB <- lmer(APA ~ MOS + (1|subject), Backward)
summary(modelMOSB)
modelMLcomB <- lmer(APA ~ MLCOM + (1|subject), Backward)
summary(modelMLcomB)
modelswB <- lmer(APA ~ stepWidth + (1|subject), Backward)
summary(modelswB)
modelslB <- lmer(APA ~ StepLength + (1|subject), Backward)
summary(modelslB)
modelAPcomfoB <- lmer(APA ~ APCOMFO + (1|subject), Backward)
summary(modelAPcomfoB)
modelslaB <- lmer(APA ~ Sla + (1|subject), Backward)
summary(modelslaB)
modelComDispF <- lmer(APA ~ COMdisp + (1|subject), Forward)
summary(modelComDispF)
modelMOSF <- lmer(APA ~ MOS + (1|subject), Forward)
summary(modelMOSF)
modelMLcomF <- lmer(APA ~ MLCOM + (1|subject), Forward)
summary(modelMLcomF)
modelswF <- lmer(APA ~ stepWidth + (1|subject), Forward)
summary(modelswF)
modelslF <- lmer(APA ~ StepLength + (1|subject), Forward)
summary(modelslF)
modelAPcomfoF <- lmer(APA ~ APCOMFO + (1|subject), Forward)
summary(modelAPcomfoF)
modelslaF <- lmer(APA ~ Sla + (1|subject), Forward)
summary(modelslaF)
myX<-scale_x_continuous(name = "Pre-Test Score", limits=c(0,2000))
myY<-scale_y_continuous(name = "Post-Test Score", limits=c(0,1500))
g1<-ggplot(data=COMB_ave, aes(x=pretest, y = post_score))+
geom_point(aes(bg=group), pch=21, size=2, alpha=0.7)+
stat_smooth(aes(col=group), method=lm, se=FALSE, size=1.5) +
facet_wrap(~experiment)+myX+myY
g2<-g1+theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))
library(ggplot2)
head(Forward)
summary(Forward$APA)
summary(Forward$StepLength)
Forward$subject=factor(Forward$subject)
myX<-scale_x_continuous(name = "Step Length", limits=c(0,0.5))
myY<-scale_y_continuous(name = "APA", limits=c(0,80))
g1<-ggplot(data=Forward, aes(x=StepLength, y = APA))+
geom_point(aes(bg=subject), pch=21, size=2, alpha=0.7)+
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
facet_wrap(~experiment)+myX+myY
g2<-g1+theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))
print(g2)
g1<-ggplot(data=Forward, aes(x=StepLength, y = APA))+
geom_point(aes(bg=subject), pch=21, size=2, alpha=0.7)+
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
myX+myY
g2<-g1+theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))
print(g2)
modelslF <- lmer(APA ~ StepLength + (1|subject), Forward)
summary(modelslF)
modelAllBwd <- lmer(APA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Backward)
summary(modelAllBwd)
modelAllFwd <- lmer(APA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Forward)
summary(modelAllFwd)
g1<-ggplot(data=Backward, aes(x=StepLength, y = APA))+
geom_point(aes(bg=subject), pch=21, size=2, alpha=0.7)+
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
myX+myY
g2<-g1+theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))
print(g2)
Backward$subject=factor(Backward$subject)
myX<-scale_x_continuous(name = "Step Length", limits=c(0,0.5))
myY<-scale_y_continuous(name = "APA", limits=c(0,80))
g1<-ggplot(data=Backward, aes(x=StepLength, y = APA))+
geom_point(aes(bg=subject), pch=21, size=2, alpha=0.7)+
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
myX+myY
g2<-g1+theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))
print(g2)
plot(density(Forward$APA))
plot(density(Forward$APA, na.rm=TRUE))
plot(density(Backward$APA, na.rm=TRUE))
Foward$lnAPA<-ln(Forward$APA)
Foward$lnAPA<-log(Forward$APA)
Forward$lnAPA<-log(Forward$APA)
Backward$lnAPA<-log(Backward$APA)
summary(Forward$lnAPA)
summary(Forward$APA)
Forward$lnAPA<-log(Forward$APA+1)
Backward$lnAPA<-log(Backward$APA+1)
summary(Forward$lnAPA)
myX<-scale_x_continuous(name = "Step Length", limits=c(0,0.5))
myY<-scale_y_continuous(name = "ln(APA)", limits=c(0,5))
g1<-ggplot(data=Forward, aes(x=StepLength, y = lnAPA))+
geom_point(aes(bg=subject), pch=21, size=2, alpha=0.7)+
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
myX+myY
g2<-g1+theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))
print(g2)
myX<-scale_x_continuous(name = "Step Length", limits=c(0,0.5))
myY<-scale_y_continuous(name = "ln(APA)", limits=c(0,5))
g1<-ggplot(data=Backward, aes(x=StepLength, y = lnAPA))+
geom_point(aes(bg=subject), pch=21, size=2, alpha=0.7)+
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
myX+myY
g2<-g1+theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))
print(g2)
f0 <- lmer(APA ~ StepLength + (1|subject), Forward)
summary(f0)
f1 <- lmer(APA ~ StepLength + (1|subject), Forward)
f1 <- lmer(lnAPA ~ StepLength + (1|subject), Forward)
summary(f1)
plot(f0)
plot(f1)
plot(f0, main = "Residuals Untransformed")
plot(f1, main = "Residuals ln(APA)")
f2 <- lmer(APA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Forward)
summary(f2)
f3 <- lmer(APA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Forward)
summary(f3)
f3 <- lmer(lnAPA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Forward)
summary(f3)
f0 <- lmer(APA ~ StepLength + (1|subject), Forward, REML=FALSE)
summary(f0)
f2 <- lmer(APA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Forward, REML=FALSE)
f3 <- lmer(lnAPA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Forward,REML=FALSE)
summary(f3)
summary(f1)
f1 <- lmer(lnAPA ~ StepLength + (1|subject), Forward, REML=FALSE)
summary(f1)
anova(f1,f3)
b0 <- lmer(APA ~ StepLength + (1|subject), Backward, REML=FALSE)
summary(b0)
plot(b0, main = "Residuals Untransformed")
b1 <- lmer(lnAPA ~ StepLength + (1|subject), Backward, REML=FALSE)
summary(b1)
plot(b1, main = "Residuals ln(APA)")
b2 <- lmer(APA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Backward, REML=FALSE)
summary(b2)
plot(b2, main = "Residuals ln(APA)")
plot(b3, main = "Residuals ln(APA)")
b3 <- lmer(lnAPA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Backward, REML=FALSE)
summary(b3)
plot(b3, main = "Residuals ln(APA)")
plot(f2, main = "Residuals ln(APA)")
f3 <- lmer(lnAPA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Forward, REML=FALSE)
summary(f3)
plot(f3, main = "Residuals ln(APA)")
b3 <- lmer(lnAPA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Backward, REML=FALSE)
summary(b3)
Forward_COMP<-na.omit(Forward)
Backward_COMP<-na.omit(Backward)
f4 <- lmer(lnAPA ~ StepLength + (1|subject), Forward_COMP, REML=FALSE)
summary(f4)
plot(f4, main = "Residuals ln(APA)")
f5 <- lmer(lnAPA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Forward_COMP, REML=FALSE)
summary(f5)
f4 <- lmer(lnAPA ~ 1 + (1|subject), Forward_COMP, REML=FALSE)
summary(f4)
plot(f4, main = "Residuals ln(APA)")
f5 <- lmer(lnAPA ~ StepLength + (1|subject), Forward_COMP, REML=FALSE)
summary(f4)
f5 <- lmer(lnAPA ~ StepLength + (1|subject), Forward_COMP, REML=FALSE)
summary(f5)
plot(f5, main = "Residuals ln(APA)")
f6 <- lmer(lnAPA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Forward_COMP, REML=FALSE)
summary(f6)
plot(f6, main = "Residuals ln(APA)")
anova(f4,f5,f6)
b4 <- lmer(lnAPA ~ 1 + (1|subject), Backward_COMP, REML=FALSE)
summary(b4)
plot(b4, main = "Residuals ln(APA)")
b5 <- lmer(lnAPA ~ StepLength + (1|subject), Backward_COMP, REML=FALSE)
summary(b5)
plot(b5, main = "Residuals ln(APA)")
b6 <- lmer(lnAPA ~ MOS + COMdisp + MLCOM + stepWidth + StepLength +
APCOMFO + Sla + (1|subject), Backward_COMP, REML=FALSE)
summary(b6)
plot(b6, main = "Residuals ln(APA)")
anova(b4,b5,b6)
library("metafor"); library("dplyr"); library("ggplot2"); library("lme4")
library("lmerTest")
getwd()
setwd("C:/Users/krl0022/Documents/GitHub/SCOAR/group_desc/")
list.files()
GROUPS<-read.csv("./data_GROUPS_protocols_added.csv", header = TRUE)
head(GROUPS)
GROUPS$exp.c<-(as.numeric(GROUPS$group)-1.5)
CTRL<-subset(GROUPS, group=="ctrl")
EXP <-subset(GROUPS, group=="exp")
summary(EXP$PT_inc)
summary(CTRL$PT_inc)
summary(EXP$OT_inc)
summary(CTRL$OT_inc)
summary(EXP$ST_inc)
summary(CTRL$ST_inc)
mean(EXP$hpd, na.rm=TRUE)
sd(EXP$hpd, na.rm=TRUE)
min(EXP$hpd, na.rm=TRUE)
max(EXP$hpd, na.rm=TRUE)
sum(EXP$h_IS_NUM)
length(EXP$hpd_STR[EXP$hpd_STR==""])
sum(is.na(EXP$hpd))-length(EXP$hpd_STR[EXP$hpd_STR==""])
mean(CTRL$hpd, na.rm=TRUE)
sd(CTRL$hpd, na.rm=TRUE)
min(CTRL$hpd, na.rm=TRUE)
max(CTRL$hpd, na.rm=TRUE)
sum(CTRL$h_IS_NUM)
length(CTRL$hpd_STR[CTRL$hpd_STR==""])
sum(is.na(CTRL$hpd))-length(CTRL$hpd_STR[CTRL$hpd_STR==""])
mean(EXP$dpw, na.rm=TRUE)
sd(EXP$dpw, na.rm=TRUE)
min(EXP$dpw, na.rm=TRUE)
max(EXP$dpw, na.rm=TRUE)
sum(EXP$d_IS_NUM)
length(EXP$dpw_STR[EXP$dpw_STR==""])
sum(is.na(EXP$dpw))-length(EXP$dpw_STR[EXP$dpw_STR==""])
mean(CTRL$dpw, na.rm=TRUE)
sd(CTRL$dpw, na.rm=TRUE)
min(CTRL$dpw, na.rm=TRUE)
max(CTRL$dpw, na.rm=TRUE)
sum(CTRL$d_IS_NUM)
length(CTRL$dpw_STR[CTRL$dpw_STR==""])
sum(is.na(CTRL$dpw))-length(CTRL$dpw_STR[CTRL$dpw_STR==""])
mean(EXP$ther_duration, na.rm=TRUE)
sd(EXP$ther_duration, na.rm=TRUE)
min(EXP$ther_duration, na.rm=TRUE)
max(EXP$ther_duration, na.rm=TRUE)
length(EXP$ther_duration[EXP$ther_duration==""])
sum(is.na(EXP$ther_duration))-length(EXP$ther_duration[EXP$ther_duration==""])
mean(CTRL$ther_duration, na.rm=TRUE)
sd(CTRL$ther_duration, na.rm=TRUE)
min(CTRL$ther_duration, na.rm=TRUE)
max(CTRL$ther_duration, na.rm=TRUE)
length(EXP$ther_duration[EXP$ther_duration==""])
sum(is.na(EXP$ther_duration))-length(EXP$ther_duration[EXP$ther_duration==""])
summary(as.factor(EXP$detailed_time))
summary(as.factor(CTRL$detailed_time))
summary(as.factor(GROUPS$detailed_time))
WORD<-subset(GROUPS, is.na(word_count) != 1)
summary(WORD$word_count)
m0<-lmer(word_count~1+(1|id), data=WORD, REML=FALSE)
m1<-lmer(word_count~1+exp.c+(1|id), data=WORD, REML=FALSE)
summary(m0)
summary(m1)
mean(WORD$word_count[WORD$group=="exp"], na.rm=TRUE)
sd(WORD$word_count[WORD$group=="exp"], na.rm=TRUE)
mean(WORD$word_count[WORD$group=="ctrl"], na.rm=TRUE)
sd(WORD$word_count[WORD$group=="ctrl"], na.rm=TRUE)
g1<-ggplot(WORD, aes(x = group, y = word_count, bg=group)) +
geom_jitter(alpha = .5, width= 0.25) + geom_boxplot(alpha = .75, notch=TRUE)
g2<-g1+scale_x_discrete(name = "Group Type") +
scale_y_continuous(name = "Word Count in Methods")
g3 <- g2 + theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold")) +
theme(legend.text=element_text(size=16), legend.title=element_text(size=16))
plot(g3)
REF<-subset(GROUPS, is.na(ref_count) != 1)
summary(REF$ref_count)
m0<-lmer(ref_count~1+(1|id), data=REF, REML=FALSE)
m1<-lmer(ref_count~1+exp.c+(1|id), data=REF, REML=FALSE)
summary(m0)
summary(m1)
mean(REF$ref_count[REF$group=="exp"], na.rm=TRUE)
sd(REF$ref_count[REF$group=="exp"], na.rm=TRUE)
mean(REF$ref_count[REF$group=="ctrl"], na.rm=TRUE)
sd(REF$ref_count[REF$group=="ctrl"], na.rm=TRUE)
g1<-ggplot(REF, aes(x = group, y = ref_count, bg=group)) +
geom_jitter(alpha = 0.5, width=0.25) + geom_boxplot(alpha = .75, notch=TRUE)
g2<-g1+scale_x_discrete(name = "Group Type") +
scale_y_continuous(name = "Reference Count in Methods", limits=c(-1,20))
g3 <- g2 + theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold")) +
theme(legend.text=element_text(size=16), legend.title=element_text(size=16))
plot(g3)
TIDIER<-subset(GROUPS, is.na(tidy_sum) != 1)
summary(TIDIER$tidy_sum)
m0<-lmer(tidy_sum~1+(1|id), data=TIDIER, REML=FALSE)
m1<-lmer(tidy_sum~1+exp.c+(1|id), data=TIDIER, REML=FALSE)
summary(m0)
summary(m1)
mean(TIDIER$tidy_sum[TIDIER$group=="exp"], na.rm=TRUE)
sd(TIDIER$tidy_sum[TIDIER$group=="exp"], na.rm=TRUE)
mean(TIDIER$tidy_sum[TIDIER$group=="ctrl"], na.rm=TRUE)
sd(TIDIER$tidy_sum[TIDIER$group=="ctrl"], na.rm=TRUE)
g1<-ggplot(TIDIER, aes(x = group, y = tidy_sum, bg=group)) +
geom_jitter(alpha = 0.5, width=0.25) + geom_boxplot(alpha = .7, notch=TRUE)
g2<-g1+scale_x_discrete(name = "Group Type") +
scale_y_continuous(name = "Total TIDIER Score", limits=c(-1,12))
g3 <- g2 + theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold")) +
theme(legend.text=element_text(size=16), legend.title=element_text(size=16))
plot(g3)
m2<-lmer(tidy_sum~1+exp.c+year_ini+(1|id), data=TIDIER, REML=FALSE)
summary(m2)
g1<-ggplot(TIDIER, aes(x = year_ini, y = tidy_sum)) +
geom_jitter(aes(fill=group), size=3, pch=21, alpha=0.7, width=0.25)
g2<-g1+scale_x_continuous(name = "Year of Publication") +
scale_y_continuous(name = "Total TIDIER Score", limits=c(-1,12))
g3 <- g2 + theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold")) +
theme(legend.text=element_text(size=16), legend.title=element_text(size=16),
legend.position = "top")
plot(g3)
A<-data.frame(EXP$id, EXP$tidy_sum)
colnames(A)[1] <- "id"
B<-data.frame(CTRL$id, CTRL$tidy_sum)
colnames(B)[1] <- "id"
head(A)
head(B)
TIDY_MERGE<-merge(A, B, by="id")
TIDY_MERGE$EXP_TIDY_c<-TIDY_MERGE$EXP.tidy_sum-mean(TIDY_MERGE$EXP.tidy_sum)
TIDY_MERGE$CTRL_TIDY_c<-TIDY_MERGE$CTRL.tidy_sum-mean(TIDY_MERGE$CTRL.tidy_sum)
m3<-lmer(EXP.tidy_sum~1+CTRL.tidy_sum+(1|id), data=TIDY_MERGE, REML=FALSE)
summary(m3)
m4<-lmer(EXP_TIDY_c~1+CTRL_TIDY_c+(1|id), data=TIDY_MERGE, REML=FALSE)
summary(m4)
g1<-ggplot(TIDY_MERGE, aes(x = CTRL.tidy_sum, y = EXP.tidy_sum)) +
geom_jitter(size=3, alpha=0.7, width=0.25)+geom_abline(intercept = 6.582, slope = 0.121)
g2<-g1+scale_x_continuous(name = "CTRL TIDIER Score", limits=c(-1,12)) +
scale_y_continuous(name = "EXP TIDIER Score", limits=c(-1,12))
g3 <- g2 + theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold")) +
theme(legend.text=element_text(size=16), legend.title=element_text(size=16))
plot(g3)
head(TIDIER)
m0<-glmer(name~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(name~1+exp.c+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(name~group, data=TIDIER)
m0<-glmer(why~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(why~1+exp.c+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(why~group, data=TIDIER)
m0<-glmer(materials~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(materials~1+exp.c+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(materials~group, data=TIDIER)
m0<-glmer(procedure~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(procedure~1+exp.c+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(procedure~group, data=TIDIER)
m0<-glmer(who~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(who~1+group+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(who~group, data=TIDIER)
m0<-glmer(how~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(how~1+(as.numeric(group)-1)+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(how~group, data=TIDIER)
m0<-glmer(where~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(where~1+exp.c+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(where~group, data=TIDIER)
m0<-glmer(how_much~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(how_much~1+exp.c+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(how_much~group, data=TIDIER)
m0<-glmer(tailor~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(tailor~1+exp.c+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(tailor~group, data=TIDIER)
m0<-glmer(modify~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(modify~1+exp.c+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(modify~group, data=TIDIER)
m0<-glmer(planned~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(planned~1+(as.numeric(group)-1)+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(planned~group, data=TIDIER)
m0<-glmer(actual~1+(1|id), family=binomial, data=TIDIER)
m1<-glmer(actual~1+exp.c+(1|id), family=binomial, data=TIDIER)
summary(m1)
xtabs(actual~group, data=TIDIER)
head(GROUPS)
CPT<-subset(GROUPS, cpt_only==1)
write.csv(CPT, "conventional_only.csv")
CPT[CPT$group=="exp",]
CPT_CTRL<-subset(CPT, group=="ctrl")
CPT_EXP<-subset(CPT, group=="exp")
summary(CPT$PT_inc[CPT$group=="exp"])
summary(CPT$PT_inc[CPT$group=="ctrl"])
summary(CPT$OT_inc[CPT$group=="exp"])
summary(CPT$OT_inc[CPT$group=="ctrl"])
summary(CPT$ST_inc[CPT$group=="exp"])
summary(CPT$ST_inc[CPT$group=="ctrl"])
mean(CPT_EXP$hpd, na.rm=TRUE)
sd(CPT_EXP$hpd, na.rm=TRUE)
min(CPT_EXP$hpd, na.rm=TRUE)
max(CPT_EXP$hpd, na.rm=TRUE)
sum(CPT_EXP$h_IS_NUM)
length(CPT_EXP$hpd_STR[CPT_EXP$hpd_STR==""])
sum(is.na(CPT_EXP$hpd))-length(CPT_EXP$hpd_STR[CPT_EXP$hpd_STR==""])
mean(CPT_CTRL$hpd, na.rm=TRUE)
sd(CPT_CTRL$hpd, na.rm=TRUE)
min(CPT_CTRL$hpd, na.rm=TRUE)
max(CPT_CTRL$hpd, na.rm=TRUE)
sum(CPT_CTRL$h_IS_NUM)
length(CPT_CTRL$hpd_STR[CTRL$hpd_STR==""])
sum(is.na(CPT_CTRL$hpd))-length(CPT_CTRL$hpd_STR[CPT_CTRL$hpd_STR==""])
mean(CPT_EXP$dpw, na.rm=TRUE)
sd(CPT_EXP$dpw, na.rm=TRUE)
min(CPT_EXP$dpw, na.rm=TRUE)
max(CPT_EXP$dpw, na.rm=TRUE)
sum(CPT_EXP$d_IS_NUM)
length(CPT_EXP$dpw_STR[CPT_EXP$dpw_STR==""])
sum(is.na(CPT_EXP$dpw))-length(CPT_EXP$dpw_STR[CPT_EXP$dpw_STR==""])
mean(CPT_CTRL$dpw, na.rm=TRUE)
sd(CPT_CTRL$dpw, na.rm=TRUE)
min(CPT_CTRL$dpw, na.rm=TRUE)
max(CPT_CTRL$dpw, na.rm=TRUE)
sum(CPT_CTRL$d_IS_NUM)
length(CPT_CTRL$dpw_STR[CPT_CTRL$dpw_STR==""])
sum(is.na(CPT_CTRL$dpw))-length(CPT_CTRL$dpw_STR[CPT_CTRL$dpw_STR==""])
mean(CPT_EXP$ther_duration, na.rm=TRUE)
sd(CPT_EXP$ther_duration, na.rm=TRUE)
min(CPT_EXP$ther_duration, na.rm=TRUE)
max(CPT_EXP$ther_duration, na.rm=TRUE)
length(CPT_EXP$ther_duration[CPT_EXP$ther_duration==""])
sum(is.na(CPT_EXP$ther_duration))-length(CPT_EXP$ther_duration[CPT_EXP$ther_duration==""])
mean(CPT_CTRL$ther_duration, na.rm=TRUE)
sd(CPT_CTRL$ther_duration, na.rm=TRUE)
min(CPT_CTRL$ther_duration, na.rm=TRUE)
max(CPT_CTRL$ther_duration, na.rm=TRUE)
length(CPT_EXP$ther_duration[CPT_EXP$ther_duration==""])
sum(is.na(CPT_EXP$ther_duration))-length(CPT_EXP$ther_duration[CPT_EXP$ther_duration==""])
summary(as.factor(CPT_EXP$detailed_time))
summary(as.factor(CPT_CTRL$detailed_time))
summary(as.factor(CPT$detailed_time))
xtabs(name~group, data=CPT)
xtabs(why~group, data=CPT)
xtabs(procedure~group, data=CPT)
xtabs(who~group, data=CPT)
xtabs(how~group, data=CPT)
xtabs(how_much~group, data=CPT)
xtabs(where~group, data=CPT)
xtabs(how~group, data=CPT)
xtabs(where~group, data=CPT)
xtabs(how_much~group, data=CPT)
xtabs(tailor~group, data=CPT)
xtabs(planned~group, data=CPT)
xtabs(actual~group, data=CPT)
